---
import { useStoryblokApi } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';

// Generatin static paths
export async function getStaticPaths() {
  // Intialize Storyblok API client
  const sbApi = useStoryblokApi();

  // Fetching data from SB endpoint
  const { data } = await sbApi.get('cdn/stories', {
    // returns all stories of type blogPost
    content_type: 'blogPost',
    version: import.meta.env.DEV ? 'draft' : 'published'
  });

  // Extracts stories (content entries) into an array
  const stories = Object.values(data.stories);

  // Maps over each story in the array creating an object with the path details Astro needs
  return stories.map((story: any) => {
    // Runs for each story item in stories array, return object for each story
    return {
      params: { slug: story.slug }
    };
  });
}

// Initialize SB API client
const sbApi = useStoryblokApi();
// Extracts slug param from Astro.params, used to identify and fetch the specific story or blog post that matches requested URL
const { slug } = Astro.params;

// Make async request to SB CDN API at specified endpoint
const { data } = await sbApi.get(`cdn/stories/blog/${slug}`, {
  version: import.meta.env.DEV ? 'draft' : 'published'
});

// Holds all properties of the content such as title, content blocks, images, and other fields defined in SB for that particular blog post
const story = data.story;
---

<html lang="en">
  <head>
    <title>Storyblok & Astro</title>
  </head>
  <body>
    <StoryblokComponent blok={story.content} />
  </body>
</html>
